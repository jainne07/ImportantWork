import { RouterProvider, createBrowserRouter } from "react-router-dom";

import EditEventPage from "./pages/EditEvent";
import EventDetailPage, {
  loader as eventDetail,
  action as deleteDetail,
} from "./pages/EventDetail";
import EventsPage, { loader as eventLoader } from "./pages/Events";
import EventsRootLayout from "./pages/EventsRoot";
import HomePage from "./pages/Home";
import NewEventPage from "./pages/NewEvent";
import RootLayout from "./pages/Root";
import ErrorPage from "./pages/Error";
import { action as manipulateAction } from "./component/advRouter/EventForm";
import AuthenticationPage, {
  action as authAction,
} from "./pages/AuthenticationPage";
import { action as logout } from "./pages/Logout";
import { checkAuthLoader, tokenLoader } from "./component/util/auth";
const router = createBrowserRouter([
  {
    path: "/",
    element: <RootLayout />,
    errorElement: <ErrorPage />,
    id: "root",
    loader: tokenLoader,
    children: [
      { index: true, element: <HomePage /> },
      {
        path: "events",
        element: <EventsRootLayout />,
        children: [
          { index: true, element: <EventsPage />, loader: eventLoader },
          {
            path: ":eventId",
            id: "event-detail",
            loader: eventDetail,
            children: [
              {
                index: true,
                element: <EventDetailPage />,
                action: deleteDetail,
              },
              {
                path: "edit",
                element: <EditEventPage />,
                action: manipulateAction,
                loader: checkAuthLoader,
              },
            ],
          },
          {
            path: "new",
            element: <NewEventPage />,
            action: manipulateAction,
            loader: checkAuthLoader,
          },
        ],
      },
      {
        path: "auth",
        element: <AuthenticationPage />,
        action: authAction,
      },
      {
        path: "logout",
        action: logout,
      },
    ],
  },
]);

function App() {
  return <RouterProvider router={router} />;
}

export default App;
